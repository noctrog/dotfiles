set -as terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[2 q'
#                           │ ├┘ ├────────┘ ├┘ ├────┘
#                           │ │  │          │  └ override with this control sequence;
#                           │ │  │          │    restore the cursor shape to a block
#                           │ │  │          │
#                           │ │  │          └ `Se` capability in the terminfo database
#                           │ │  │
#                           │ │  └ override the current value with this new one;
#                           │ │    set the cursor shape to the one specified by
#                           │ │    the digit `%d`
#                           │ │
#                           │ └ `Ss` capability in the terminfo database
#                           │
#                           └ for all terminals (no matter the value of `$TERM`)

# Change C-b to C-a
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# Terminal color mode (required for emacs and vim to show colorschemes)
set-option -g default-terminal tmux-256color

set -g history-limit 10000
set -g base-index 1					# Windows start at 1
set-option -g renumber-windows on   # Automatically renumber windows when a window is closed 
set -s escape-time 0
bind-key -n M-n new-window -c "#{pane_current_path}"
bind-key -n M-1 select-window -t :1
bind-key -n M-2 select-window -t :2
bind-key -n M-3 select-window -t :3
bind-key -n M-4 select-window -t :4
bind-key -n M-5 select-window -t :5
bind-key -n M-6 select-window -t :6
bind-key -n M-7 select-window -t :7
bind-key -n M-8 select-window -t :8
bind-key -n M-9 select-window -t :9
bind-key -n M-0 select-window -t :0
bind-key -n M-. select-window -n
bind-key -n M-, select-window -p
bind-key -n M-< swap-window -t -1
bind-key -n M-> swap-window -t +1
bind-key -n M-X confirm-before "kill-window"
bind-key -n M-v split-window -h -c "#{pane_current_path}"
bind-key -n M-s split-window -v -c "#{pane_current_path}"
bind-key -n M-R command-prompt -I "" "rename-window '%%'"
bind-key -n M-f resize-pane -Z
bind-key -n M-h select-pane -L
bind-key -n M-l select-pane -R
bind-key -n M-k select-pane -U
bind-key -n M-j select-pane -D
bind-key -n M-Left select-pane -L
bind-key -n M-Right select-pane -R
bind-key -n M-Up select-pane -U
bind-key -n M-Down select-pane -D
bind-key -n "M-H" run-shell 'old=`tmux display -p "#{pane_index}"`; tmux select-pane -L; tmux swap-pane -t $old'
bind-key -n "M-J" run-shell 'old=`tmux display -p "#{pane_index}"`; tmux select-pane -D; tmux swap-pane -t $old'
bind-key -n "M-K" run-shell 'old=`tmux display -p "#{pane_index}"`; tmux select-pane -U; tmux swap-pane -t $old'
bind-key -n "M-L" run-shell 'old=`tmux display -p "#{pane_index}"`; tmux select-pane -R; tmux swap-pane -t $old'
bind-key -n "M-S-Left" run-shell 'old=`tmux display -p "#{pane_index}"`; tmux select-pane -L; tmux swap-pane -t $old'
bind-key -n "M-S-Down" run-shell 'old=`tmux display -p "#{pane_index}"`; tmux select-pane -D; tmux swap-pane -t $old'
bind-key -n "M-S-Up" run-shell 'old=`tmux display -p "#{pane_index}"`; tmux select-pane -U; tmux swap-pane -t $old'
bind-key -n "M-S-Right" run-shell 'old=`tmux display -p "#{pane_index}"`; tmux select-pane -R; tmux swap-pane -t $old'
bind-key -n M-d confirm-before "kill-pane"
bind-key -n M-/ copy-mode
bind-key -n M-p run-shell 'tmux neww tmux-open-project'

# Linux system clipboard
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"
bind-key -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel "xclip -in -selection clipboard"

# macOS system clipboard
#bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"
#bind-key -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel "pbcopy"

set -g mouse on
set-option -g status-keys vi
set-option -g status-position top
set-option -g set-titles on
set-option -g set-titles-string 'tmux - #W'
set -g bell-action any
set-option -g visual-bell off
set-option -g set-clipboard off
setw -g mode-keys vi
setw -g monitor-activity on
set -g visual-activity on
set -g status-style fg=colour15
set -g status-justify centre
# set -g status-left '' # By default is the session name
set -g status-left-length 30 # Increase the deyault for long names
set -g status-right ''
set -g status-interval 1
set -g message-style fg=colour0,bg=colour3
setw -g window-status-bell-style fg=colour1
setw -g window-status-current-style fg=yellow,bold
setw -g window-status-style fg=colour250
setw -g window-status-current-format ' #{?#{==:#W,#{b:SHELL}},#{b:pane_current_path},#W} '
setw -g window-status-format ' #{?#{==:#W,#{b:SHELL}},#{b:pane_current_path},#W} '
